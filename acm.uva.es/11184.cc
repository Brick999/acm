#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cctype>
#include <cmath>
#include <cassert>
#include <algorithm>
#include <vector>
#include <sstream>
#include <iostream>
#include <map>
#include <deque>
using namespace std;

bool check(vector<int> res, int N) {
	if (res.size() != N) return false;
	vector<int> zz;
	for (int i = 0; i < (int)res.size(); i++) {
		if (!(1 <= res[i] && res[i] <= N+1)) return false;
		zz.push_back(abs(res[i] - res[(i+1)%res.size()]));
	}
	sort(zz.begin(), zz.end());
	for (int i = 0; i < zz.size(); i++)
		if (!(zz[i] == i+1)) return false;
	sort(res.begin(), res.end());
	for (int i = 1; i < res.size(); i++)
		if (!(res[i-1] != res[i])) return false;
	return true;
}

int pre[] = {
9999,9999,
9999,3,3,9999,9999,4,4,9999,9999,6,7,9999,9999,8,9,9999,9999,10,11,9999,9999,12,13,9999,9999,14,15,9999,9999,16,17,9999,9999,18,19,9999,9999,20,21,9999,9999,22,23,9999,9999,24,25,9999,9999,
26,27,9999,9999,28,29,9999,9999,30,31,9999,9999,32,33,9999,9999,34,35,9999,9999,36,37,9999,9999,38,39,9999,9999,40,41,9999,9999,42,43,9999,9999,44,45,9999,9999,46,47,9999,9999,48,49,9999,9999,50,51,
9999,9999,52,53,9999,9999,54,55,9999,9999,56,57,9999,9999,58,59,9999,9999,60,61,9999,9999,62,63,9999,9999,64,65,9999,9999,66,67,9999,9999,68,69,9999,9999,70,71,9999,9999,72,73,9999,9999,74,75,9999,9999,
76,77,9999,9999,78,79,9999,9999,80,81,9999,9999,82,83,9999,9999,84,85,9999,9999,86,87,9999,9999,88,89,9999,9999,90,91,9999,9999,92,93,9999,9999,94,95,9999,9999,96,97,9999,9999,98,99,9999,9999,100,101,
9999,9999,102,103,9999,9999,104,105,9999,9999,106,107,9999,9999,108,109,9999,9999,110,111,9999,9999,112,113,9999,9999,114,115,9999,9999,116,117,9999,9999,118,119,9999,9999,120,121,9999,9999,122,123,9999,9999,124,125,9999,9999,
126,127,9999,9999,128,129,9999,9999,130,131,9999,9999,132,133,9999,9999,134,135,9999,9999,136,137,9999,9999,138,139,9999,9999,140,141,9999,9999,142,143,9999,9999,144,145,9999,9999,146,147,9999,9999,148,149,9999,9999,150,151,
9999,9999,152,153,9999,9999,154,155,9999,9999,156,157,9999,9999,158,159,9999,9999,160,161,9999,9999,162,163,9999,9999,164,165,9999,9999,166,167,9999,9999,168,169,9999,9999,170,171,9999,9999,172,173,9999,9999,174,175,9999,9999,
176,177,9999,9999,178,179,9999,9999,180,181,9999,9999,182,183,9999,9999,184,185,9999,9999,186,187,9999,9999,188,189,9999,9999,190,191,9999,9999,192,193,9999,9999,194,195,9999,9999,196,197,9999,9999,198,199,9999,9999,200,201,
9999,9999,202,203,9999,9999,204,205,9999,9999,206,207,9999,9999,208,209,9999,9999,210,211,9999,9999,212,213,9999,9999,214,215,9999,9999,216,217,9999,9999,218,219,9999,9999,220,221,9999,9999,222,223,9999,9999,224,225,9999,9999,
226,227,9999,9999,228,229,9999,9999,230,231,9999,9999,232,233,9999,9999,234,235,9999,9999,236,237,9999,9999,238,239,9999,9999,240,241,9999,9999,242,243,9999,9999,244,245,9999,9999,246,247,9999,9999,248,249,9999,9999,250,251,
9999,9999,252,253,9999,9999,254,255,9999,9999,256,257,9999,9999,258,259,9999,9999,260,261,9999,9999,262,263,9999,9999,264,265,9999,9999,266,267,9999,9999,268,269,9999,9999,270,271,9999,9999,272,273,9999,9999,274,275,9999,9999,
276,277,9999,9999,278,279,9999,9999,280,281,9999,9999,282,283,9999,9999,284,285,9999,9999,286,287,9999,9999,288,289,9999,9999,290,291,9999,9999,292,293,9999,9999,294,295,9999,9999,296,297,9999,9999,298,299,9999,9999,300,301,
9999,9999,302,303,9999,9999,304,305,9999,9999,306,307,9999,9999,308,309,9999,9999,310,311,9999,9999,312,313,9999,9999,314,315,9999,9999,316,317,9999,9999,318,319,9999,9999,320,321,9999,9999,322,323,9999,9999,324,325,9999,9999,
326,327,9999,9999,328,329,9999,9999,330,331,9999,9999,332,333,9999,9999,334,335,9999,9999,336,337,9999,9999,338,339,9999,9999,340,341,9999,9999,342,343,9999,9999,344,345,9999,9999,346,347,9999,9999,348,349,9999,9999,350,351,
9999,9999,352,353,9999,9999,354,355,9999,9999,356,357,9999,9999,358,359,9999,9999,360,361,9999,9999,362,363,9999,9999,364,365,9999,9999,366,367,9999,9999,368,369,9999,9999,370,371,9999,9999,372,373,9999,9999,374,375,9999,9999,
376,377,9999,9999,378,379,9999,9999,380,381,9999,9999,382,383,9999,9999,384,385,9999,9999,386,387,9999,9999,388,389,9999,9999,390,391,9999,9999,392,393,9999,9999,394,395,9999,9999,396,397,9999,9999,398,399,9999,9999,400,401,
9999,9999,402,403,9999,9999,404,405,9999,9999,406,407,9999,9999,408,409,9999,9999,410,411,9999,9999,412,413,9999,9999,414,415,9999,9999,416,417,9999,9999,418,419,9999,9999,420,421,9999,9999,422,423,9999,9999,424,425,9999,9999,
426,427,9999,9999,428,429,9999,9999,430,431,9999,9999,432,433,9999,9999,434,435,9999,9999,436,437,9999,9999,438,439,9999,9999,440,441,9999,9999,442,443,9999,9999,444,445,9999,9999,446,447,9999,9999,448,449,9999,9999,450,451,
9999,9999,452,453,9999,9999,454,455,9999,9999,456,457,9999,9999,458,459,9999,9999,460,461,9999,9999,462,463,9999,9999,464,465,9999,9999,466,467,9999,9999,468,469,9999,9999,470,471,9999,9999,472,473,9999,9999,474,475,9999,9999,
476,477,9999,9999,478,479,9999,9999,480,481,9999,9999,482,483,9999,9999,484,485,9999,9999,486,487,9999,9999,488,489,9999,9999,490,491,9999,9999,492,493,9999,9999,494,495,9999,9999,496,497,9999,9999,498,499,9999,9999,500,501,
9999,9999,9999

};

int main() {
	int N;
	for (int cs = 1; scanf("%d", &N) == 1 && N >= 2; cs++) {
		printf("Case %d:", cs);

		for (int extra = pre[N]; extra <= N; extra++) {
			vector<int> res;
			res.push_back(extra);
			res.push_back(1);

			for (int d = N, s = -1; d >= 2; d--) {
				if (d == extra - 1) continue;
				s = -s;

				res.push_back(res.back() + s * d);
			}

			if (abs(res.back() - extra) != 1) continue;
			if (!check(res,N)) continue;

			for (int i = 0; i < (int)res.size(); i++) printf(" %d", res[i]);
			printf("\n");

			goto done;
		}

		printf(" -1\n");
done:;
	}
}
