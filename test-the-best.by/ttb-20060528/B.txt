Условие:

- "Привет, пацаны!"
- "Кенни, ты где был?"
- "Да так, тусовался..."

Один из фанатов <Южного парка> очень удивился в середине пятого сезона сериала, когда обратил внимание на то, что поведение одного из героев не поддается объяснению. Этот фанат всегда отличался прирожденной внимательностью. И, благодаря этому качеству, ему удалось заметить, что иногда в конце серии мальчика Кенни ждет трагическая гибель. В чем же тут странность - мы же знаем, что мальчик Кенни живет в очень бедной семье алкоголиков? А странность в том, что в начале следующей серии Кенни оживает вновь. Фанат решил посвятить свою жизнь исследованию вопроса, связанного с реинкарнацией Кенни.

Фанат понял, что Кенни только притворялся человеком. На самом деле он еще тот фрукт! Да, господа, я не оговорился, Кенни - это фрукт, который растет на дереве. Дерево, на котором растут мальчики Кенни, состоит из N разветвлений и N-1 веток. Каждая ветка соединяет ровно два разветвления. За фруктами дерева ухаживает киса Картмана. Киса может бегать по веткам в двух направлениях. Дерево устроено таким образом, что киса может пробежать от любого разветвления дерева к любому другому. Фрукты дерева, т.е. мальчики Кенни, растут на разветвлениях дерева. Всего на дереве растет K фруктов.

К сожалению, доказать свою гипотезу фанату не удалось. И он начал думать над другими проблемами сериала. Он понял, что скоро создатели сериала захотят, чтобы в одной серии снимался не один, а сразу несколько мальчиков Кенни. <Теперь надо будет ухаживать не за одним, а сразу за L фруктaми. Кисе Картмана придется совсем туго> - подумал фанат. Он знает, что для того, чтобы ухаживать за данными L фруктами, кисе потребуется ровно Т секунд, где Т - это расстояние между парой самых удаленных друг от друга фруктов из этих L. Расстоянием между двумя фруктами называется минимальное количество веток, по которым требуется пробежать кисе Картмана для того, чтобы попасть из разветвления, в котором находится один из фруктов, в разветвление, в котором находится другой.

Пожалуйста, помогите кисе Картмана выбрать L различных фруктов из K фруктов, растущих на дереве, так, чтобы время, необходимое для ухаживания за выбранными фруктами, было минимально.

Входные данные:

Целое число N - количество разветвлений в дереве.

Целое число L - количество фруктов, за которыми должна ухаживать киса Картмана.

Массив целых чисел V описывает номера разветвлений дерева, в которых растут мальчики Кенни. Каждый элемент этого массива - это номер одного такого разветвления. Разветвления дерева нумеруются последовательными целыми числами от 0 до N-1.

Массив строк edges описывает ветки дерева. Каждый элемент массива имеет вид <x y>, где x и y - целые числа от 0 до N-1 включительно, и описывает ветку, соединяющую разветвления с номерами x и y.

Выходные данные:

Целое число, равное минимальному количеству секунд, которое потребуется кисе Картмана для того, чтобы ухаживать за какими-нибудь L фруктами на дереве.

Описание (C#):

Класс: WelcomeKenny
Метод: getMinTime
Параметры: int, int, int[], string[]
Возвращаемое значение: int
Описание метода: public int getMinTime (int N, int L, int[] V, string[] edges)

Описание (Java):

Класс: WelcomeKenny
Метод: getMinTime
Параметры: int, int, int[], String[]
Возвращаемое значение: int
Описание метода: public int getMinTime (int N, int L, int[] V, String[] edges)

Описание (C++):

Класс: WelcomeKenny
Метод: getMinTime
Параметры: int, int, vector<int>, vector<string>
Возвращаемое значение: int
Описание метода: int getMinTime (int N, int L, vector<int> V, vector<string> edges)

Ограничения:

1. Число N от 2 до 100 включительно.
2. Количество элементов в массиве V от 1 до N включительно.
3. Каждый элемент массива V от 0 до N-1 включительно.
4. Никакие два элемента массива V не совпадают.
5. Число L от 1 до количества элементов в массиве V включительно.
6. Количество элементов в массиве edges равно N-1.
7. Каждый элемент массива edges имеет вид "x y", где x и y - целые числа от 0 до N-1 включительно.
8. По веткам, описанным в массиве edges, можно добраться из любого разветвления дерева в любое другое.
9. Количество тестов не превосходит 35.

Примеры:

1)	N = 7
	L = 2
	V = {3, 5, 1}
	edges = {"2 5", "0 2", "4 2", "6 0", "3 4", "1 6"}
	result = 3

Расстояние между 1-м и 3-м фруктами равно 5, так как кисе нужно пробежать по пути 1 -> 6 -> 0 -> 2 -> 4 -> 3, состоящему из пяти веток. Расстояние между 1-м и 5-м фруктами - 4 (путь: 1 -> 6 -> 0 -> 2 -> 5). Расстояние между 3-м и 5-м фруктами - 3 (путь: 3 -> 4 -> 2 -> 5).

Нам нужно выбрать два фрукта из массива V, расстояние между которыми минимально. Это фрукты 3 и 5, а расстояние между ними равно 3.

2)	N = 2
	L = 2
	V = {0, 1}
	edges = {"1 0"}
	result = 1

Тривиальный случай.

3)	N = 6
	L = 1
	V = {1, 5, 2, 4}
	edges = {"2 4", "5 2", "3 4", "1 5", "0 2"}
	result = 0

Для того чтобы ухаживать за одним фруктом, необходимо 0 секунд.

4)	N = 8
	L = 8
	V = {"2 0", "4 2", "5 4", "7 4", "1 0", "6 2", "3 5"}
	edges = {1, 3, 0, 4, 6, 2, 5, 7}
	result = 5

В данном случае нужно ухаживать за всеми фруктами. Для этого потребуется 5 секунд, т.к. расстояние между фруктами 1 и 3 равняется 5.

	N = 9
	L = 3
	V = {2, 8, 1, 4, 7, 3}
	edges = {"3 7", "6 7", "4 7", "0 6", "2 6", "1 2", "8 6", "5 2"}
	result = 2

Нужно ухаживать за фруктами 3, 4 и 7. 
