<html><head> <title>NOV05 ontherun analysis</title></head>
<body bgcolor="#ffffff">
<center><img src="ontherun_files/cow1.jpg" height="118" width="742"></center>
<h2>November 2005 Problem 'ontherun' Analysis</h2>
<p>
Sorry that no analysis is available (send one in!). Here is Tomek Czajka's brief
solution:
</p><pre>#include &lt;algorithm&gt;
#include &lt;cstdio&gt;
#include &lt;cstdlib&gt;
#include &lt;vector&gt;
using namespace std;
#define REP(i,n) for(int _n=n, i=0;i&lt;_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i&lt;=_b;++i)
#define FORD(i,a,b) for(int i=(a),_b=(b);i&gt;=_b;--i)
typedef long long LL;
const int INF = 1000000000; const LL INFLL = LL(INF) * LL(INF);
template&lt;class T&gt; inline int size(const T&amp;c) { return c.size(); }

///////////////////////////////////////////////////////////////////

vector&lt;int&gt; points;
int start;

void read() {
  FILE *f = fopen("ontherun.in","r");
  int n,st;
  fscanf(f,"%d%d",&amp;n,&amp;st);
  REP(i,n) {
    int x; fscanf(f,"%d",&amp;x); points.push_back(x);
  }
  fclose(f);
  points.push_back(st);
  sort(points.begin(),points.end());
  start = lower_bound(points.begin(),points.end(),st)-points.begin();
}

int cache[1024][1024][2];

int f(int a,int b,int side) {
  int &amp;res = cache[a][b][side];
  if(res!=-1) return res;
  int left = size(points)-1-b + a;
  res = 2*INF;
  if(left==0) res = 0;
  else {
    int poz = side==0 ? points[a] : points[b];
    if(a&gt;0) res &lt;?= f(a-1,b,0) + left*(poz-points[a-1]);
    if(b&lt;size(points)-1) res &lt;?= f(a,b+1,1) + left*(points[b+1]-poz);
  }
  return res;
}

int main() {
  read();
  memset(cache,-1,sizeof(cache));
  int res = f(start,start,0);
  FILE *f=fopen("ontherun.out","w");
  fprintf(f,"%d\n",res);
  fclose(f);
}
</pre></body></html>