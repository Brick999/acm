<html><head>

<script language="javascript">
<!--
    var endtime;
    
    function initcount(secondsleft) {
        var now = new Date();
        return now.getTime() + secondsleft*1000;
    }
    function count1(i) { i = i - i%1; return i; } 
    function count2(i) { i = i - i%1; if (i < 10) return "0"+i; return i; }
    function updateclock(head, word, endtime) {
        var now = new Date();
        var delta = (endtime - now.getTime())/1000;
        var s, x;
        if(delta < 1)
            s = head + " has ended";
        else{
            s = head + " ends: ";
            s = head + ": ";
            if(delta >= 24*3600)
                s = s + count1(delta/86400) + "d ";
            if(delta >= 3600)
                s = s + count2((delta/3600)%24) + "h ";
            if(delta >= 60)
                s = s + count2((delta/60)%60) + "m ";
            s = s + count2(delta%60) + "s";
            setTimeout("updateclock('"+head+"','"+word+"',"+endtime+")", 500);
        }

        var slot = document.getElementById(word);
        slot.innerHTML = s;
    }
-->
</script>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251"><title>USACO Problems</title></head><body onload="endtime = initcount(362198); updateclock('Elite February, 2006', 'Contest', endtime); endtime = initcount(10799); updateclock('Your Contest Session', 'Person', endtime);" bgcolor="#eeffee">
<center>
<table><tbody><tr>
<td>
<!--<center><img src='/usaco/cow1.jpg' width='742' height='118'></center>-->
<center><img src="gold-ru_files/cow1.jpg" height="88" width="550"></center>
</td>
<td valign="top">
<table>
    <tbody><tr><td valign="top"><b>GOLD</b> Division<br></td></tr>
    <tr><td><div id="Contest">Elite February, 2006: 4d 04h 36m 23s</div></td></tr>
    <tr><td><div id="Person">Your Contest Session: 02h 59m 44s</div></td></tr>
    <tr><td></td></tr>
</tbody></table>
</td><td></td></tr>
</tbody></table>
</center>


<pre></pre>
<pre>**********************************************************************
                           GOLD PROBLEMS
**********************************************************************
                  Четыре задачи с номерами от 1 до 4
**********************************************************************

Problem 1: Treats for the Cows [Marco Gallotta, 2005]

    Фермер Джон приобрел N (1 &lt;= N &lt;= 2000) жвачек для коров, которые 
получили деньги за сданное молоко. ФД продает по одной жвачке в день 
и хочет максимизировать доход, который он получит от продажи всех
жвачек.
    При этом:
  * Жвачки пронумерованы от 1 до N и хрантяся последовательно в
в длинном ящике, открытом с обоих концов.
  * Также как и лучшие вина и деликатесные сыры, жвачки улучшаются 
и дорожают с возрастом. Жвачка с номером i имеет ценность v(i).
(1 &lt;= v(i) &lt;= 1000)
  * Коровы платят больше за жвачку, возраст которой больше - в 
соответствии с формулой: цена за жвачку с номером i и возрастом a
есть v(i)*a. 
    По заданным величинам v(i) каждой из жвачек, выстроенных по 
индексу i в ящике, найдите какое наибольшее значение ФД может 
получить при оптимальной продаже.
    Первая жвачка продается в день 1 и имеет возраст 1.
Каждый последующий день увеличивает возраст всех оставшихся жвачек 
на 1. 

PROBLEM NAME: trt

INPUT FORMAT:

* Строка 1: одно целое число N

* Строки 2..N+1: Строка i+1 значение v(i)

SAMPLE INPUT (file trt.in):

5
1
3
1
5
2

INPUT DETAILS:

5 жвачек. В первый день ФД может продавать или жвачку 1 по цене 1
или жвачку 5 по цене 2.
 
OUTPUT FORMAT:

* Строка 1: Максимальный доход, который ФД может получить от 
            продажи жвачек
 
SAMPLE OUTPUT (file trt.out):

43

OUTPUT DETAILS:

ФД продает жвачки (с исходными ценами 1, 3, 1, 5, 2) в следующем
порядке: 1, 5, 2, 3, 4, с доходом: 1x1 + 2x2 + 3x3 + 4x1 + 5x5 = 43.

**********************************************************************

Problem 2: Backward Digit Sums [Harry Wiggins, 2002]

ФД и его коровы любят играть в следующую игру. Они пишут числа от 
1 до N (1 &lt;= N &lt;= 10) в определенном порядке, затем складывают  
соседние числа, чтобы получить следующий список чисел, в котором 
чисел уже на одно меньше. Этот процесс продолжается до тех пор, 
пока останется одно число. Например, для N=4 эта игра может 
выглядеть следующим образом:

    3   1   2   4
      4   3   6
        7   9
         16

    Коровы ФД начали играть в более сложную игру - в которой они
пытаются восстановить исходную последовательность чисел по заданным 
значениям N и конечной суммы. Эта игра выше арифметических 
способностей ФД. Напишите программу, которая поможет ФД играть в эту 
игру и выглядеть не глупее собственных коров.

PROBLEM NAME: bdsum

INPUT FORMAT:

* Строка 1: Два разделенных пробелом целых числа: N и конечная сумма 

SAMPLE INPUT (file bdsum.in):

4 16

OUTPUT FORMAT:

* Строка 1:  Порядок чисел 1..N, который приведет к заданной сумме.
             Если возможно множество решений, выведите решение,
             наименьшее в лексико-графическом порядке - то есть 
             меньшие числа должны стоять раньше. 


SAMPLE OUTPUT (file bdsum.out):

3 1 2 4

OUTPUT DETAILS:

Возможны и другие последовательности, например: 3 2 1 4, однако 
3 1 2 4 - меньшая в лексико-графическом порядке.

**********************************************************************

Problem 3: Cellphones [Bruce Merry, 2003]

     Коровы начали использовать сотовые телефоны для общения друг с 
другом, но обнаружили, что расположение клавиш не вполне подходит к 
их копытам. Поэтому они спроектировали специальный сотовый телефон
с меньшим количеством, но бОльших клавиш.
     Что им нравится в стандартных сотовых телефонах - это 
предсказание текста. С каждой кнопкой ассоциировано несколько букв 
и можно набирать слово, используя ассоциированные клавиши. Поскольку 
с каждой клавишей ассоциировано несколько букв, некоторые 
последовательности нажатий клавиш могут соответствовать нескольким 
словам ожновременно. Однако большинство таких коллизий может быть 
разрешено с помощью словаря.
      Поскольку коровы проектируют свой сотовый телефон, они также 
собираются заменить английский алфавит на свой коровий алфавит.
По удивительной случайности, коровий алфавит это просто первые L 
букв английского алфавита в том же самом порядке. Коровы хотят 
так распределить буквы коровьего алфавита по B клавишам (1 &lt;= B &lt;= 
L), чтобы максимальное количество слов в их словаре однозначно 
распознавалось при использовании предсказания текста. Как и в 
обычных телефонах, они хотят чтобы буквы на каждой клавише были 
непрерывной последовательностью (одна или несколько соседних букв)
алфавита.
     Это задача типа '#FILE'. Вы должны вычислить ответы на Вашем 
компьютере и послать их. Тестовые данные находятся  
   <a href="http://ace.delos.com/cell.zip">в файле</a>


      Вставьте в свои выходные файлы заголовки типа: 

#FILE cell 3

Где 3 обозначает номер решения, которое Вы посылаете.

PROBLEM NAME: cell

INPUT FORMAT:

* Строка 1: Одно целое число, обозначающее номер текущего теста -
            это тот номер, который должен появится в заголовочной
            строке #FILE построенного Вами выходного файла.
 
* Строка 2: Два разделенных пробелом целых числа B и L

* Строка 3: D, количество слов в словаре (1 &lt;= D &lt;= 1000)

* Строки 4..D+3: Каждая строка содержит одно слово словаря,
                 записанное большими буквами и имеющее длину
                 от 1 до 10 символов. Слова задаются в 
                 алфавитном порядке без дубликатов. 

SAMPLE INPUT (file cell.in):

1
3 13
11
ALL
BALL
BELL
CALK
CALL
CELL
DILL
FILL
FILM
ILL
MILK

OUTPUT FORMAT:

* Строка 1: Заголовок, как описано выше

* Строка 2: Количество слов в коровьем словаре которые, имеют
            уникальные последовательности клавиш

* Строки 3..B+2: n-я строка содержит буквы, соответствующие клавише 
                 n, большими буквами в алфавитном порядке. Строки
                 должны быть написаны в лексико-графическом порядке
                 и каждая коровья буква должна появится ровно 1 раз.
                 Если оптимальное решение не единственное, выведите
                 то решение, которое размещает наибольшее 
                 количество букв на клавише 1. В случае равенства -
                 то которое размещает наибольшее количество букв
                 на клавише 2 и т.д.


SAMPLE OUTPUT (file cell.out):

#FILE cell 1
7
AB
CDEFGHIJK
LM

OUTPUT DETAILS:

Клавиша 1 содержит AB, клавиша два содержит C-K, и клавиша 3 
содержит LM. Слова CELL, DILL, FILL и FILM вводятся как 2233,
а все остальные 7 слов вводятся уникально.

**********************************************************************

Problem 4: Steady Cow Assignment [Coaches, 2004]

     У ФД N (1 &lt;= N &lt;= 1000) коров, каждая размещается в одном из 
B (1 &lt;= B &lt;= 20) загонов, которые, конечно, имеют ограниченную 
вместимость. Некоторым коровам нравится их текущий загон, а 
некоторым - нет.
     ФД хочет реорганизовать коров такми образом, чтобы коровы были 
одинаково довольны, насколько это возможно, даже ели это означает, 
что каждой корове не нравится назначенный ей загон.
     Каждая корова дает ФД порядок, в котором она предпочитает 
загоны. Уровень "довольства" коровы от конкретного распределения 
это ее "ранг" для этого загона.
     Ваша задача - найти такое распределение коров по загонам,
что вместимость никакого загона не превышена и величина диапазона
(то есть положительная разность между самым большим и самым 
маленьким уровнем предпочтения загона) самая минимальная.

Time limit: 2 seconds на каждый тест

PROBLEM NAME: stead

INPUT FORMAT:

* Строка 1: Два разделенных пробелом целых числа N и B 

* Строки 2..N+1: Каждая строка содержит B разделенных одиночными
            пробелами целых чисел - некоторая последовательность
            всех чисел из диапазона 1..B. Первое число на строке 
            i+1 - это для коровы с номером i - номер загона с 
            наивысшим приоритетом. Второе число на это строке 
            это для коровы с номером i номер загона со следующим
            приоритетом и т.д.

* Строка N+2: В разделенных одиночными пробелами целых чисел
            соответственно вместимость первого загона, затем 
            вместимость второго загона и т.д. Гарантируется, что
            сумма этих чисел будет не меньше чем N.

SAMPLE INPUT (file stead.in):

6 4
1 2 3 4
2 3 1 4
4 2 3 1
3 1 2 4
1 3 4 2
1 4 2 3
2 1 3 2

OUTPUT FORMAT:

* Строка 1: Одно целое число, величина минимального диапазона 
            назначенных коровами загонам приоритетов, включая 
            граничные точки


SAMPLE OUTPUT (file stead.out):

2

OUTPUT DETAILS:

    Каждой корове можно обеспечить выполнение ее первого или второго
выбора: в загон 1 поместить коров 1 и 5, в загон 2 - горову 2, в 
загон 3 - корову 4, в загон 4 - коровы 3 и 6.

**********************************************************************

Translation by Michael Dolinsky
</pre><hr>
<form action="/ioiupload" enctype="multipart/form-data" method="post">
<input name="a" value="QIcq6ov3zKK" type="hidden">


<table bgcolor="#000000" border="0" cellpadding="0" cellspacing="0">
<tbody><tr><td height="1"></td><td>

</td></tr><tr><td width="1"></td><td>

<table bgcolor="#bfffbf" cellpadding="5">
<tbody><tr><td>Use this form to submit a program for grading:</td>
<td rowspan="3"><input value="Submit" name="submit" type="submit"></td>
</tr><tr><td width="60%"><b>Program File:</b><input name="filename" type="file"></td>
    </tr>
</tbody></table>
</td><td width="1"></td>

</tr><tr height="1"><td></td><td></td></tr>
</tbody></table>
<hr>
Nothing is currently saved for grading.
<hr>
<center>
<a href="http://ace.delos.com/ioiedit?a=QIcq6ov3zKK">Edit your database record</a>
&nbsp;|&nbsp;
<a href="http://ace.delos.com/ioiupload?a=QIcq6ov3zKK&amp;logout=1"> Logout </a>
<!--<a href="https://ace.delos.com/rules.html" target="_blank"> Rules </a>-->
&nbsp;|&nbsp;
<a href="http://ace.delos.com/ioiupload?init=1&amp;a=QIcq6ov3zKK">Main contest index</a>
</center>
<!--&nbsp;|&nbsp;-->
<center>
<a href="http://ace.delos.com/ioiupload?a=QIcq6ov3zKK&amp;showsubmit">See submitted solutions</a>
&nbsp;|&nbsp;
<a href="http://ace.delos.com/ioiupload?a=QIcq6ov3zKK&amp;suggestionbox">Send message
to contest director</a><br>
Director is not online<br>
This page was generated at 10:23:22 GMT.
</center>

</form></body></html>